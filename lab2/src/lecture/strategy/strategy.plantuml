@startuml

title __STRATEGY's Class Diagram__\n

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.DecoyDuck {
          + DecoyDuck()
          + display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      abstract class lecture.strategy.Duck {
          + Duck()
          + performFly()
          + performQuack()
          + setFlyBehavior()
          + setQuackBehavior()
          + swim()
          {abstract} ~ display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.FakeQuack {
          + quack()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      interface lecture.strategy.FlyBehavior {
          {abstract} + fly()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.FlyNoWay {
          + fly()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.FlyRocketPowered {
          + fly()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.FlyWithWings {
          + fly()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.MallardDuck {
          + MallardDuck()
          + display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.MiniDuckSimulator {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.MiniDuckSimulator1 {
          {static} + main()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.ModelDuck {
          + ModelDuck()
          + display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.MuteQuack {
          + quack()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.Quack {
          + quack()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      interface lecture.strategy.QuackBehavior {
          {abstract} + quack()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.RedHeadDuck {
          + RedHeadDuck()
          + display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.RubberDuck {
          + RubberDuck()
          + display()
      }
    }
  }
  

  namespace  {
    namespace ecture.strategy {
      class lecture.strategy.Squeak {
          + quack()
      }
    }
  }
  

  lecture.strategy.DecoyDuck -up-|> lecture.strategy.Duck
  lecture.strategy.Duck o-- lecture.strategy.FlyBehavior : flyBehavior
  lecture.strategy.Duck o-- lecture.strategy.QuackBehavior : quackBehavior
  lecture.strategy.FakeQuack .up.|> lecture.strategy.QuackBehavior
  lecture.strategy.FlyNoWay .up.|> lecture.strategy.FlyBehavior
  lecture.strategy.FlyRocketPowered .up.|> lecture.strategy.FlyBehavior
  lecture.strategy.FlyWithWings .up.|> lecture.strategy.FlyBehavior
  lecture.strategy.MallardDuck -up-|> lecture.strategy.Duck
  lecture.strategy.ModelDuck -up-|> lecture.strategy.Duck
  lecture.strategy.MuteQuack .up.|> lecture.strategy.QuackBehavior
  lecture.strategy.Quack .up.|> lecture.strategy.QuackBehavior
  lecture.strategy.RedHeadDuck -up-|> lecture.strategy.Duck
  lecture.strategy.RubberDuck -up-|> lecture.strategy.Duck
  lecture.strategy.Squeak .up.|> lecture.strategy.QuackBehavior


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
